{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\BlockChain\\\\File-storage-DApp\\\\src\\\\Healthcare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Healthcare = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(null);\n  const [patientID, setPatientID] = useState('');\n  const [diagnosis, setDiagnosis] = useState('');\n  const [treatment, setTreatment] = useState('');\n  const [patientRecords, setPatientRecords] = useState([]);\n  const [providerAddress, setProviderAddress] = useState('');\n  const contractAddress = '0x9959abfa9791d1e126e45c0faf712ad321e6004f';\n  const contractABI = [{\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"patientName\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"diagnosis\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"treatment\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"addRecord\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"provider\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"authorizeProvider\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"getOwner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"getPatientRecords\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"recordID\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"patientName\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"diagnosis\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"treatment\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"timestamp\",\n        \"type\": \"uint256\"\n      }],\n      \"internalType\": \"struct HealthcareRecords.Record[]\",\n      \"name\": \"\",\n      \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"recordID\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"deleteRecord\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }];\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send('eth_requestAccounts', []);\n        const signer = provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        const accountAddress = await signer.getAddress();\n        setAccount(accountAddress);\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setContract(contract);\n        const ownerAddress = await contract.getOwner();\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\n      } catch (error) {\n        console.error('Error connecting to wallet: ', error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const fetchPatientRecords = async () => {\n    try {\n      const records = await contract.getPatientRecords(patientID);\n      setPatientRecords(records);\n    } catch (error) {\n      console.error('Error fetching patient records', error);\n    }\n  };\n  const addRecord = async () => {\n    try {\n      const tx = await contract.addRecord(patientID, 'Alice', diagnosis, treatment);\n      await tx.wait();\n      fetchPatientRecords();\n    } catch (error) {\n      console.error('Error adding records', error);\n    }\n  };\n  const authorizeProvider = async () => {\n    if (isOwner) {\n      try {\n        const tx = await contract.authorizeProvider(providerAddress);\n        await tx.wait();\n        alert(`Provider ${providerAddress} authorized successfully`);\n      } catch (error) {\n        console.error('Only contract owner can authorize different providers');\n      }\n    } else {\n      alert('Only contract owner can call this function');\n    }\n  };\n  const deleteRecord = async recordID => {\n    try {\n      const tx = await contract.deleteRecord(patientID, recordID);\n      await tx.wait();\n      alert(`Record ${recordID} deleted successfully`);\n      fetchPatientRecords();\n    } catch (error) {\n      console.error('Error deleting record:', error);\n      alert('Error deleting record');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"HealthCare Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"account-info\",\n      children: [\"Connected Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }, this), isOwner && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"owner-info\",\n      children: \"You are the contract owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fetch Patient Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"Enter Patient ID\",\n        value: patientID,\n        onChange: e => setPatientID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: fetchPatientRecords,\n        children: \"Fetch Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Patient Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"Diagnosis\",\n        value: diagnosis,\n        onChange: e => setDiagnosis(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"Treatment\",\n        value: treatment,\n        onChange: e => setTreatment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: addRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authorize HealthCare Provider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"Provider Address\",\n        value: providerAddress,\n        onChange: e => setProviderAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: authorizeProvider,\n        children: \"Authorize Provider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), patientRecords.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"record-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Record ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 16\n          }, this), \" \", record.recordID.toNumber()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Diagnosis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 16\n          }, this), \" \", record.diagnosis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Treatment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 16\n          }, this), \" \", record.treatment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 16\n          }, this), \" \", new Date(record.timestamp.toNumber() * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => deleteRecord(record.recordID.toNumber()),\n          children: \"Delete Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Healthcare, \"Fw+Oi+UTJolZnAMAR0LMfUxjaXw=\");\n_c = Healthcare;\nexport default Healthcare;\nvar _c;\n$RefreshReg$(_c, \"Healthcare\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Healthcare","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","isOwner","setIsOwner","patientID","setPatientID","diagnosis","setDiagnosis","treatment","setTreatment","patientRecords","setPatientRecords","providerAddress","setProviderAddress","contractAddress","contractABI","connectWallet","providers","Web3Provider","window","ethereum","send","getSigner","accountAddress","getAddress","Contract","ownerAddress","getOwner","toLowerCase","error","console","fetchPatientRecords","records","getPatientRecords","addRecord","tx","wait","authorizeProvider","alert","deleteRecord","recordID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","record","index","toNumber","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/shiva/BlockChain/File-storage-DApp/src/Healthcare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Healthcare = () => {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [isOwner, setIsOwner] = useState(null);\r\n  const [patientID, setPatientID] = useState('');\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n  const [treatment, setTreatment] = useState('');\r\n  const [patientRecords, setPatientRecords] = useState([]);\r\n  const [providerAddress, setProviderAddress] = useState('');\r\n\r\n  const contractAddress = '0x9959abfa9791d1e126e45c0faf712ad321e6004f';\r\n\r\n  const contractABI = [\r\n    {\r\n      \"inputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        { \"internalType\": \"uint256\", \"name\": \"patientID\", \"type\": \"uint256\" },\r\n        { \"internalType\": \"string\", \"name\": \"patientName\", \"type\": \"string\" },\r\n        { \"internalType\": \"string\", \"name\": \"diagnosis\", \"type\": \"string\" },\r\n        { \"internalType\": \"string\", \"name\": \"treatment\", \"type\": \"string\" }\r\n      ],\r\n      \"name\": \"addRecord\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        { \"internalType\": \"address\", \"name\": \"provider\", \"type\": \"address\" }\r\n      ],\r\n      \"name\": \"authorizeProvider\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"getOwner\",\r\n      \"outputs\": [\r\n        { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        { \"internalType\": \"uint256\", \"name\": \"patientID\", \"type\": \"uint256\" }\r\n      ],\r\n      \"name\": \"getPatientRecords\",\r\n      \"outputs\": [\r\n        {\r\n          \"components\": [\r\n            { \"internalType\": \"uint256\", \"name\": \"recordID\", \"type\": \"uint256\" },\r\n            { \"internalType\": \"string\", \"name\": \"patientName\", \"type\": \"string\" },\r\n            { \"internalType\": \"string\", \"name\": \"diagnosis\", \"type\": \"string\" },\r\n            { \"internalType\": \"string\", \"name\": \"treatment\", \"type\": \"string\" },\r\n            { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }\r\n          ],\r\n          \"internalType\": \"struct HealthcareRecords.Record[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"tuple[]\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        { \"internalType\": \"uint256\", \"name\": \"patientID\", \"type\": \"uint256\" },\r\n        { \"internalType\": \"uint256\", \"name\": \"recordID\", \"type\": \"uint256\" }\r\n      ],\r\n      \"name\": \"deleteRecord\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const connectWallet = async () => {\r\n      try {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        await provider.send('eth_requestAccounts', []);\r\n        const signer = provider.getSigner();\r\n        setProvider(provider);\r\n        setSigner(signer);\r\n\r\n        const accountAddress = await signer.getAddress();\r\n        setAccount(accountAddress);\r\n\r\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        setContract(contract);\r\n\r\n        const ownerAddress = await contract.getOwner();\r\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\r\n      } catch (error) {\r\n        console.error('Error connecting to wallet: ', error);\r\n      }\r\n    };\r\n\r\n    connectWallet();\r\n  }, []);\r\n\r\n  const fetchPatientRecords = async () => {\r\n    try {\r\n      const records = await contract.getPatientRecords(patientID);\r\n      setPatientRecords(records);\r\n    } catch (error) {\r\n      console.error('Error fetching patient records', error);\r\n    }\r\n  };\r\n\r\n  const addRecord = async () => {\r\n    try {\r\n      const tx = await contract.addRecord(patientID, 'Alice', diagnosis, treatment);\r\n      await tx.wait();\r\n      fetchPatientRecords();\r\n    } catch (error) {\r\n      console.error('Error adding records', error);\r\n    }\r\n  };\r\n\r\n  const authorizeProvider = async () => {\r\n    if (isOwner) {\r\n      try {\r\n        const tx = await contract.authorizeProvider(providerAddress);\r\n        await tx.wait();\r\n        alert(`Provider ${providerAddress} authorized successfully`);\r\n      } catch (error) {\r\n        console.error('Only contract owner can authorize different providers');\r\n      }\r\n    } else {\r\n      alert('Only contract owner can call this function');\r\n    }\r\n  };\r\n\r\n  const deleteRecord = async (recordID) => {\r\n    try {\r\n      const tx = await contract.deleteRecord(patientID, recordID);\r\n      await tx.wait();\r\n      alert(`Record ${recordID} deleted successfully`);\r\n      fetchPatientRecords();\r\n    } catch (error) {\r\n      console.error('Error deleting record:', error);\r\n      alert('Error deleting record');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1 className='title'>HealthCare Application</h1>\r\n      {account && <p className='account-info'>Connected Account: {account}</p>}\r\n      {isOwner && <p className='owner-info'>You are the contract owner</p>}\r\n\r\n      <div className='form-section'>\r\n        <h2>Fetch Patient Records</h2>\r\n        <input\r\n          className='input-field'\r\n          type='text'\r\n          placeholder='Enter Patient ID'\r\n          value={patientID}\r\n          onChange={(e) => setPatientID(e.target.value)}\r\n        />\r\n        <button className='action-button' onClick={fetchPatientRecords}>\r\n          Fetch Records\r\n        </button>\r\n      </div>\r\n\r\n      <div className='form-section'>\r\n        <h2>Add Patient Record</h2>\r\n        <input\r\n          className='input-field'\r\n          type='text'\r\n          placeholder='Diagnosis'\r\n          value={diagnosis}\r\n          onChange={(e) => setDiagnosis(e.target.value)}\r\n        />\r\n        <input\r\n          className='input-field'\r\n          type='text'\r\n          placeholder='Treatment'\r\n          value={treatment}\r\n          onChange={(e) => setTreatment(e.target.value)}\r\n        />\r\n        <button className='action-button' onClick={addRecord}>\r\n          Add Record\r\n        </button>\r\n      </div>\r\n\r\n      <div className='form-section'>\r\n        <h2>Authorize HealthCare Provider</h2>\r\n        <input\r\n          className='input-field'\r\n          type='text'\r\n          placeholder='Provider Address'\r\n          value={providerAddress}\r\n          onChange={(e) => setProviderAddress(e.target.value)}\r\n        />\r\n        <button className='action-button' onClick={authorizeProvider}>\r\n          Authorize Provider\r\n        </button>\r\n      </div>\r\n\r\n      <div className='records-section'>\r\n        <h2>Patient Records</h2>\r\n        {patientRecords.map((record, index) => (\r\n          <div key={index} className='record-card'>\r\n            <p><strong>Record ID:</strong> {record.recordID.toNumber()}</p>\r\n            <p><strong>Diagnosis:</strong> {record.diagnosis}</p>\r\n            <p><strong>Treatment:</strong> {record.treatment}</p>\r\n            <p><strong>Timestamp:</strong> {new Date(record.timestamp.toNumber() * 1000).toLocaleString()}</p>\r\n            <button\r\n              className='action-button'\r\n              onClick={() => deleteRecord(record.recordID.toNumber())}\r\n            >\r\n              Delete Record\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Healthcare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}